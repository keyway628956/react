{"version":3,"sources":["styles/Excel.less","images/test2.jpg","images/test1.jpg","images/test3.jpg","layout/TopMenu.js","page/GraphQL.js","page/PostList.js","page/Carousel.js","page/Home.js","page/About.js","page/UploadForm.js","page/Page404.js","page/TestAPI.js","page/OsmMap.js","page/Customer.js","RouterSetting.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopMenu","Navbar","bg","variant","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","QUERY_CATEGORY","gql","CREATE_CATEGORY","GraphQL","inputName","useState","count","setCount","useQuery","pollInterval","data","loading","inputRef","useRef","useMutation","createCategory","createCategory2","useEffect","document","Container","Row","Col","xs","md","onSubmit","e","preventDefault","variables","name","value","style","marginTop","marginBottom","whiteSpace","ref","node","width","cursor","onClick","columns","dataIndex","defaultSortOrder","sorter","a","b","filters","text","children","onFilter","record","indexOf","length","sortDirections","dataSource","category","onChange","pagination","extra","console","log","GET_POSTS_FOR_AUTHOR","PostList","query","error","refetch","postList","posts","map","key","Carousel","autoplay","height","stule","marginLeft","marginRight","src","require","alt","Home","Jumbotron","backgroundColor","borderColor","About","padding","display","justifyContent","alignItems","color","fontSize","lineHeight","letterSpacing","class","target","rel","UploadForm","dataList","setDataList","header","setHeader","item","index","styles","UploadOutlined","accept","file","files","fileReader","FileReader","onload","event","result","workbook","XLSX","first_worksheet","Sheets","SheetNames","jsonArr","sheet_to_json","sheet","array","headerList","entozh","forEach","formatTitleOrFileld","firstRow","newArray","splice","json","newitem","im","i","newKey","formatData","age","address","uploadFilesChange","hasOwnProperty","concat","message","success","readAsBinaryString","obj","isArray","Object","assign","ConvertArr","Page404","CropCode","CropName","MarketName","TransDate","MarketCode","Upper_Price","Middle_Price","Lower_Price","Avg_Price","Trans_Quantity","TestAPI","fetch","then","response","ok","statusText","Promise","reject","dataArray","Data","total","catch","overflowX","overflowY","scroll","x","y","mymap","OsmMap","city","setCity","area","setArea","setData","onAreaChange","osm","removeMapMarker","pharmacies","filter","pharmacy","properties","town","county","geometry","addMapMarker","coordinates","penTo","updateMarker","undefined","remove","L","setView","tileLayer","attribution","maxZoom","addTo","axios","res","features","icons","green","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","grey","icon","mask_adult","mask_child","marker","bindPopup","phone","updated","eachLayer","layer","Marker","removeLayer","panTo","LatLng","openPopup","for","selected","cityJson","CityName","find","c","AreaList","AreaName","QUERY_CUSTOMER","CREATE_CUSTOMER","MydModalWithGrid","props","Modal","aria-labelledby","size","maxHeight","centered","Header","closeButton","Title","Body","Footer","onHide","Customer","isQuery","setIsQuery","isAdd","setIsAdd","isEdit","setIsEdit","modalShow","setModalShow","tel","date","other","setItem","createcustomer","dataField","sort","sortFunc","order","rowA","rowB","align","headerAlign","headerStyle","wordBreak","wordWrap","textFilter","dateFilter","evt","disabled","Spinner","as","animation","role","aria-hidden","show","ListGroup","action","keyField","customerList","bodyStyle","overflow","paginationFactory","defaultSorted","filterFactory","filterPosition","InputGroup","Prepend","Text","readOnly","App","basename","path","component","client","ApolloClient","uri","process","RouterSetting","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,oC,g4+BCA3CD,EAAOC,QAAU,IAA0B,mC,oGCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,0OCuD5BC,MA7Cf,WACI,OAGI,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,OAAO,OAAtD,mCAEI,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,mBAEA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,aAAf,4BACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,WACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,eAAf,cACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,WAAf,UACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,WACA,kBAACQ,EAAA,EAAD,CAAaC,MAAM,UAAUL,GAAG,sBAC5B,kBAACI,EAAA,EAAYE,KAAb,CAAkBV,KAAK,kCAAvB,8CACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,kBACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,aACA,kBAACQ,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,oBAIR,kBAACY,EAAA,EAAD,CAAMC,QAAM,GACR,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASV,UAAU,YACxD,kBAACW,EAAA,EAAD,CAAQrB,QAAQ,mBAAhB,c,kaClBpB,IAAMsB,EAAiBC,YAAH,KASdC,EAAkBD,YAAH,KAmMNE,MApLf,WAAoB,IAWZC,EAXW,EACWC,mBAAS,GADpB,mBACRC,EADQ,KACDC,EADC,OAIWC,YACtBR,EAAgB,CAChBS,aAAc,MAFVC,EAJO,EAIPA,KAAMC,EAJC,EAIDA,QAQVC,EAAWC,iBAAO,MAZP,EAaUC,YAAYZ,GAA9Ba,EAbQ,sBAeWD,YAAYZ,GAA/Bc,EAfQ,oBAgFf,OARAC,qBAAU,WAENC,SAAS3B,MAAT,sBAAgCe,EAAhC,aAMAK,EAAgB,yCAKhB,6BACI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAhB,2BAEI,0BACIC,SAAU,SAAAC,GACNA,EAAEC,iBACFX,EAAe,CACXY,UAAW,CACPC,KAAMxB,EAAUyB,SAGxBzB,EAAUyB,MAAQ,IAGtBC,MAAO,CAAEC,UAAW,MAAOC,aAAc,MAAOC,WAAY,WAE5D,6CACA,2BACIC,IAAK,SAAAC,GACD/B,EAAY+B,GAEhBL,MAAO,CAAEM,MAAO,WAGpB,4BAAQvC,KAAK,SAASiC,MAAO,CAAEO,OAAQ,YAAvC,kBACA,6BACA,8CACA,2BAAOH,IAAK,SAAAA,GAAStB,EAAWsB,GAAOJ,MAAO,CAAEM,MAAO,WACvD,4BAAQE,QAAS,SAAAb,GACbA,EAAEC,iBACFV,EAAgB,CAEZW,UAAW,CACPC,KAAMhB,EAASiB,SAGvBjB,EAASiB,MAAQ,KARrB,eAaZ,kBAACT,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0CAAgBf,EAAhB,WAGJ,kBAACe,EAAA,EAAD,KACI,4BAAQiB,QAAS,kBAAM/B,EAASD,EAAQ,KAAxC,cAIR,kBAACc,EAAA,EAAD,KA2BI,kBAAC,IAAD,CAAOmB,QApJP,CACZ,CACIhD,MAAO,KACPiD,UAAW,KACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEzD,GAAK0D,EAAE1D,KAE/B,CACIK,MAAO,OACPiD,UAAW,OACXK,QAAS,CACL,CACIC,KAAM,MACNjB,MAAO,OAEX,CACIiB,KAAM,MACNjB,MAAO,OAEX,CACIiB,KAAM,UACNjB,MAAO,UACPkB,SAAU,CACN,CACID,KAAM,QACNjB,MAAO,SAEX,CACIiB,KAAM,QACNjB,MAAO,YAOvBmB,SAAU,SAACnB,EAAOoB,GAAR,OAAkD,IAA/BA,EAAOrB,KAAKsB,QAAQrB,IACjDa,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEf,KAAKuB,OAASP,EAAEhB,KAAKuB,QACzCC,eAAgB,CAAC,aA8GgBC,WAAY3C,EAAK4C,SAAUC,SAxGpE,SAAkBC,EAAYX,EAASH,EAAQe,GAC3CC,QAAQC,IAAI,SAAUH,EAAYX,EAASH,EAAQe,U,sKCzG3D,IAAMG,EAAuB3D,YAAH,KAiCX4D,EAvBE,kBACb,kBAAC,IAAD,CAAOC,MAAOF,IACT,YAAwC,IAArCjD,EAAoC,EAApCA,QAASoD,EAA2B,EAA3BA,MAAOrD,EAAoB,EAApBA,KAAoB,EAAdsD,QACtB,GAAIrD,EAAS,OAAO,yCACpB,GAAIoD,EAAO,OAAO,uCAClB,IAAME,EAAWvD,EAAKwD,MAAMC,KAAI,YAAoB,IAAjBjF,EAAgB,EAAhBA,GAAIK,EAAY,EAAZA,MACnC,OACI,wBAAI6E,IAAKlF,EAAIE,UAAU,mBAClBG,MAKb,OACI,6BACI,wBAAIH,UAAU,cAAc6E,Q,kBCoBjCI,MAzCf,WACI,OAGI,kBAAC,IAAD,CAAcC,UAAU,EAAMxC,MAAO,CAAEM,MAAO,QAASmC,OAAQ,QAASxC,UAAW,SAC/E,yBAAKyC,MAAO,CAAEC,WAAY,OAAQC,YAAa,SAC3C,yBAEIC,IAAKC,EAAQ,KACbC,IAAI,iBAGZ,yBAAKL,MAAO,CAAEC,WAAY,OAAQC,YAAa,SAC3C,yBAEIC,IAAKC,EAAQ,KACbC,IAAI,iBAGZ,yBAAKL,MAAO,CAAEC,WAAY,OAAQC,YAAa,SAC3C,yBAEIC,IAAKC,EAAQ,KACbC,IAAI,iBAGZ,yBAAKL,MAAO,CAAEC,WAAY,OAAQC,YAAa,SAC3C,yBAEIC,IAAKC,EAAQ,KACbC,IAAI,mBCaTC,MAvCf,WACI,OAEI,kBAAC3D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,OAIJ,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC0D,EAAA,EAAD,CAAWjD,MAAO,CAAEkD,gBAAiB,UAAWC,YAAa,YACzD,6CACA,6JAIA,2BACI,kBAAClF,EAAA,EAAD,CAAQrB,QAAQ,UAAUI,KAAK,UAA/B,kBAKhB,kBAACsC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,U,OC0JL6D,MAzLf,WACI,OACI,0BAAMpD,MAAO,CACTqD,QAAS,OACTC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,MAAO,UACPC,SAAU,OACVC,WAAY,MACZC,cAAe,UACnB,6BACI,kBAACX,EAAA,EAAD,CAAWjD,MAAO,CAAEkD,gBAAiB,UAAWC,YAAa,YACzD,sCACA,6JAIA,2BACI,kBAAClF,EAAA,EAAD,CAAQrB,QAAQ,WAAhB,gBAKR,yBAAKiH,MAAM,UACrB,yBAAKA,MAAM,QACT,yBAAKhB,IAAI,GAAGE,IAAI,KAChB,4CACA,gGACA,6BACA,uDACA,yBAAKc,MAAM,WACT,uBAAGA,MAAM,YAAW7G,KAAK,oDAAmD8G,OAAO,SAASC,IAAI,uBAAhG,aACA,uBAAGF,MAAM,OAAM7G,KAAK,+BAA8B8G,OAAO,SAASC,IAAI,uBAAtE,YAEF,yBAAKF,MAAM,SACT,sCACA,wDACA,wBAAIA,MAAM,aACR,4BACE,yBAAKA,MAAM,UACT,yBAAKA,MAAM,QACX,yBAAKA,MAAM,SACX,yBAAKA,MAAM,SACX,yBAAKA,MAAM,UALf,kBASA,4BACE,yBAAKA,MAAM,UAAS,yBAAKA,MAAM,QAC7B,yBAAKA,MAAM,SACX,yBAAKA,MAAM,UAHf,oBAOA,4BACE,yBAAKA,MAAM,UAAS,yBAAKA,MAAM,QAC7B,yBAAKA,MAAM,SACX,yBAAKA,MAAM,UAHf,iBAOA,4BACE,yBAAKA,MAAM,UAAS,yBAAKA,MAAM,QAC7B,yBAAKA,MAAM,UAFf,kBAMA,4BACE,yBAAKA,MAAM,UAAS,yBAAKA,MAAM,QAC7B,yBAAKA,MAAM,SACX,yBAAKA,MAAM,SACX,yBAAKA,MAAM,UAJf,eAOA,4BACE,yBAAKA,MAAM,UAAS,yBAAKA,MAAM,QAC7B,yBAAKA,MAAM,UAFf,iBASJ,yBAAKA,MAAM,SACT,oDACA,wDACA,wBAAIA,MAAM,YACR,0CAGE,yBAAKA,MAAM,OACT,yBAAKA,MAAM,gBAIf,wCAEE,yBAAKA,MAAM,OACT,yBAAKA,MAAM,gBAGf,uCAEE,yBAAKA,MAAM,OACT,yBAAKA,MAAM,gBAGf,uCAEE,yBAAKA,MAAM,OACT,yBAAKA,MAAM,gBAGf,yCAEE,yBAAKA,MAAM,OACT,yBAAKA,MAAM,mBAOrB,yBAAKA,MAAM,SACT,yBAAKA,MAAM,eACX,yBAAKA,MAAM,SACT,0CACA,4CACA,wBAAIA,MAAM,cACR,wBAAIA,MAAM,QAAV,OACE,2FACe,6BACf,0BAAMA,MAAM,aAAZ,iHAGF,wBAAIA,MAAM,QAAV,OACE,4BACE,+EAAiB,6BAAS,0BAAMA,MAAM,aAAZ,sHAC1B,oJAA0B,6BAAS,0BAAMA,MAAM,aAAZ,wFAGvC,wBAAIA,MAAM,QAAV,OACE,uGACiB,6BADjB,IACuB,0BAAMA,MAAM,aAAZ,8HAGzB,wBAAIA,MAAM,QAAV,OACE,qFACc,6BACd,0BAAMA,MAAM,aAAZ,mDAGF,wBAAIA,MAAM,QAAV,OACE,4BACE,2FAAc,6BAAK,0BAAMA,MAAM,aAAZ,6CACnB,kEAMV,yBAAKA,MAAM,SACP,2CACA,uEACE,wBAAIA,MAAM,eACR,mHACA,2FACA,qFACA,6GACA,wG,+DCrHV,SAASpC,EAASC,EAAYX,EAASH,EAAQe,GAC3CC,QAAQC,IAAI,SAAUH,EAAYX,EAASH,EAAQe,GAKvD,IAAI/C,EAAO,GA4KIoF,MA1Kf,WAAuB,IAAD,EACczF,mBAAS,IADvB,mBACX0F,EADW,KACDC,EADC,OAEU3F,mBAAS,IAFnB,mBAEX4F,EAFW,KAEHC,EAFG,KA8GZ3D,EAAU,CACZ0D,EAAO9B,KAAI,SAACgC,EAAMC,GAAP,MACP,CAEI7G,MAAO4G,EACP3D,UAAW2D,EACX1D,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEwD,GAAQvD,EAAEuD,SAyB1C,OAjBAzC,QAAQC,IAAI,UAAWpB,GAkBnB,yBAAKT,MAAO,CAAEC,UAAW,IAAK0C,WAAY,KACtC,uBAAGrF,UAAWiH,IAAO,oBAArB,8DACA,kBAAC,IAAD,CAAQjH,UAAWiH,IAAO,qBACtB,kBAACC,EAAA,EAAD,MACA,2BAAOlH,UAAWiH,IAAO,sBAAuBxG,KAAK,OAAO0G,OAAO,cAAchD,SA/I7F,SAAuBiD,GAAM,IAEjBC,EAAUD,EAAKZ,OAAfa,MAEFC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAAC,GAChB,IAAK,IACOC,EAAWD,EAAMjB,OAAjBkB,OAEFC,EAAWC,OAAUF,EAAQ,CAAEjH,KAAM,WAIrCoH,EAAkBF,EAASG,OAAOH,EAASI,WAAW,IAC5DzD,QAAQC,IAAI,kBAAmBsD,GAC/B,IAAMG,EAAUJ,QAAWK,cAAcJ,EAAiB,CAAEhB,OAAQ,IAIpE,IAAK,IAAMqB,KAuCvB,SAA2BC,EAAOf,GAC9B9C,QAAQC,IAAI,oBAAqB4D,GACjC,IAAMC,EAAaD,EAAM,GACzB7D,QAAQC,IAAI,aAAc6D,GAC1BtB,EAAUsB,GACV,IAAMC,EAkCV,SAA6B9E,EAAGC,GAC5B,IAAM6E,EAAS,GAIf,OAHAlF,EAAQmF,SAAQ,SAAAvB,GACZsB,EAAOtB,EAAKxD,IAAMwD,EAAKvD,MAEpB6E,EAvCQE,CAAoB,KAAM,QACzCjE,QAAQC,IAAIsC,GACZ,IAAM2B,EAAW3B,EAAO9B,KAAI,SAAAgC,GAAI,OAAIsB,EAAOtB,MACrC0B,EAAQ,YAAON,GACrB7D,QAAQC,IAAI,WAAYkE,GACxBA,EAASC,OAAO,EAAG,GACnBpE,QAAQC,IAAI,YAAakE,GACzB,IAAME,EAAOF,EAAS1D,KAAI,SAACgC,EAAMC,GAC7B1C,QAAQC,IAAI,OAAQwC,GACpB,IAAM6B,EAAU,GAOhB,OANA7B,EAAKuB,SAAQ,SAACO,EAAIC,GACd,IAAMC,EAASX,EAAWU,IAAMA,EAChCF,EAAQG,GAAUF,KAIfD,KAEXtE,QAAQC,IAAI,WAAYiE,GACxBlE,QAAQC,IAAI,OAAQoE,GACpB/B,EAAY+B,GACZ,IAAMK,EAAaL,EAAK5D,KAAI,SAACgC,EAAMC,GAAP,MAAkB,CAC1CxE,KAAMuE,EAAKC,GACXiC,IAAKlC,EAAKkC,IACVC,QAASnC,EAAKmC,YAGlB5E,QAAQC,IAAI,aAAcyE,GA1ElBG,CAAkBnB,GAGEL,EAASG,OAErBH,EAASG,OAAOsB,eAAelB,KAE/B5G,EAAOA,EAAK+H,OAAOzB,QAAWK,cAAcN,EAASG,OAAOI,MAMpEoB,IAAQC,QAAQ,kCAEhBjF,QAAQC,IAAIjD,GAEd,MAAOe,GAELiH,IAAQ3E,MAAM,sDAItB2C,EAAWkC,mBAAmBnC,EAAM,OAyG5B,0BAAMrH,UAAWiH,IAAO,qBAAxB,6BAEJ,4BACA,4BAaA,kBAAC,IAAD,CAAO9D,QAASA,EAAQ,GAAIc,WArCpC,SAAoB0C,GAChB,IAAI8C,EAAM,GACV,OAAI9C,EAAS+C,SACTC,OAAOC,OAAOH,EAAK9C,GACnBrC,QAAQC,IAAI,MAAOkF,GACZA,IAGXnF,QAAQC,IAAI,WAAYoC,EAAU,cAAgBA,GAC3CA,GA4BqCkD,CAAWlD,GAAWxC,SAAUA,EAAUzB,MAAO,CAAEC,UAAW,QCvMnGmH,MA1Bf,WACI,OACI,yBAAKvD,MAAM,YAAY7D,MAAO,CAAEC,UAAW,QACvC,yBAAK4D,MAAM,gBACP,yBAAKA,MAAM,mBACP,yBAAKA,MAAM,aACX,yBAAKA,MAAM,gBACX,yBAAKA,MAAM,iBACX,yBAAKA,MAAM,YACX,yBAAKA,MAAM,YACP,yBAAKA,MAAM,YACX,yBAAKA,MAAM,eACX,yBAAKA,MAAM,gBACX,yBAAKA,MAAM,WACP,yBAAKA,MAAM,cAGnB,yBAAKA,MAAM,kB,2BCZzBpD,EAAU,CACZ,CACIhD,MAAO,iCACPiD,UAAW,WACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEwG,SAAWvG,EAAEuG,WAErC,CACI5J,MAAO,iCACPiD,UAAW,WACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEyG,SAASjG,OAASP,EAAEwG,SAASjG,SAErD,CACI5D,MAAO,2BACPiD,UAAW,aACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE0G,WAAWlG,OAASP,EAAEyG,WAAWlG,SAEzD,CACI5D,MAAO,2BACPiD,UAAW,YACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE2G,UAAY1G,EAAE0G,YAEtC,CACI/J,MAAO,2BACPiD,UAAW,aACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE4G,WAAa3G,EAAE2G,aAEvC,CACIhK,MAAO,oCACPiD,UAAW,cACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE6G,YAAc5G,EAAE4G,cAExC,CACIjK,MAAO,oCACPiD,UAAW,eACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE8G,aAAe7G,EAAE6G,eAEzC,CACIlK,MAAO,oCACPiD,UAAW,cACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAE+G,YAAc9G,EAAE8G,cAExC,CACInK,MAAO,0CACPiD,UAAW,YACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEgH,UAAY/G,EAAE+G,YAEtC,CACIpK,MAAO,mCACPiD,UAAW,iBACXC,iBAAkB,UAClBC,OAAQ,SAACC,EAAGC,GAAJ,OAAUD,EAAEiH,eAAiBhH,EAAEgH,kBA8DhCC,MAjDf,WAAoB,IAAD,EAEiBxJ,mBAAS,IAF1B,mBAER0F,EAFQ,KAEEC,EAFF,KAsCf,OA/BA/E,qBAAU,WAGN6I,MAAM,4DACDC,KADL,uCACU,WAAMC,GAAN,mBAAArH,EAAA,sEACiBqH,EAASjC,OAD1B,UACIrH,EADJ,OAIGsJ,EAASC,GAJZ,uBAMQlG,EAASrD,GAAQA,EAAKgI,SAAYsB,EAASE,WANnD,kBAOSC,QAAQC,OAAOrG,IAPxB,OASIsG,EAAY3J,EAAK4J,KACvBtE,EAAYqE,GAIZ3G,QAAQC,IAAI,OAAQjD,EAAK4J,KAAM,QAAS5J,EAAK6J,OAd3C,2CADV,uDAkBKC,OAAM,SAAAzG,GAEHL,QAAQK,MAAM,sBAAuBA,QAI9C,IAKC,yBAAKjC,MAAO,CAAE2I,UAAW,OAAQC,UAAW,SAA5C,WAEI,kBAAC,IAAD,CAAOnI,QAASA,EAASc,WAAY0C,EACjC4E,OAAQ,CAAEC,EAAG,oBAAqBC,EAAG,S,4DCjHjDC,GAAQ,KAqLGC,OAnLf,WAAmB,IAAD,EAEU1K,mBAAS,MAFnB,mBAEP2K,EAFO,KAEDC,EAFC,OAGU5K,mBAAS,MAHnB,mBAGP6K,EAHO,KAGDC,EAHC,OAIU9K,mBAAS,MAJnB,mBAIPK,EAJO,KAID0K,EAJC,KASd,SAASC,EAAaxJ,GAQlByJ,EAAIC,kBANJJ,EAAQtJ,GAUZ,SAAsBqJ,GAClB,IAAMM,EAAa9K,EAAK+K,QAAO,SAACC,GAC5B,OAAKR,EAGEQ,EAASC,WAAWC,OAASV,EAFzBQ,EAASC,WAAWE,SAAWb,KAI9CQ,EAAW9D,SAAQ,SAACgE,GAAc,IACtBC,EAAyBD,EAAzBC,WAAYG,EAAaJ,EAAbI,SACpBR,EAAIS,aACAD,EAASE,YAAY,GACrBF,EAASE,YAAY,GACrBL,MAOGD,EAJLF,EAAW,GAMjBF,EAAIW,MAAMP,EAASI,SAASE,YAAY,GAAIN,EAASI,SAASE,YAAY,GAAIN,EAASC,YAF3F,IAAeD,EA5BXQ,CAAarK,GANjB6B,QAAQC,IAAI,OAAQqH,GACpBtH,QAAQC,IAAI,OAAQuH,GAyCpBjK,qBAAU,WAENyC,QAAQC,IAAI,QAASmH,SACPqB,IAAVrB,IAAiC,OAAVA,KACvBA,GAAMsB,SACN1I,QAAQC,IAAImH,KAEhBA,GAAQuB,KAAElI,IAAI,SAASmI,QAAQ,CAAC,SAAU,YAAa,IAIvDD,KAAEE,UAFa,qDAEK,CAChBC,YAAa,qGACbC,QAAS,KACVC,MAAM5B,IAGT6B,KAAM,8EACD5C,MAAK,SAAA6C,GACFlJ,QAAQC,IAAI,eAAMiJ,EAAIlM,KAAKmM,UAC3BzB,EAAQwB,EAAIlM,KAAKmM,aAElBrC,OAAM,SAAAzG,GAELL,QAAQK,MAAM,sBAAuBA,QAG9C,IAIH,IAAM+I,EAAQ,CACVC,MAAO,IAAIV,KAAEW,KAAK,CACdC,QAAS,2FACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MAErBC,KAAM,IAAIjB,KAAEW,KAAK,CACbC,QAAS,kGACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,OAKnB/B,EAAM,CACRS,aADQ,SACKnB,EAAGC,EAAG1E,GACf,IAAMoH,EAAOpH,EAAKqH,YAAcrH,EAAKsH,WAAaX,EAAMC,MAAQD,EAAMQ,KACtEjB,KAAEqB,OAAO,CAAC7C,EAAGD,GAAI,CACb2C,SACDb,MAAM5B,IAAO6C,UAFhB,kBAEqCxH,EAAKvE,KAF1C,sFAGcuE,EAAKqH,WAAL,UAAqBrH,EAAKqH,WAA1B,WAA2C,iCAHzD,4BAG0ErH,EAAKsH,WAAL,UAAqBtH,EAAKsH,WAA1B,WAA2C,iCAHrH,4FAI8CtH,EAAKmC,QAJnD,6BAI+EnC,EAAKmC,QAJpF,yCAKAnC,EAAKyH,MALL,oEAMWzH,EAAK0H,QANhB,cAQJtC,gBAXQ,WAYJT,GAAMgD,WAAU,SAACC,GACTA,aAAiB1B,KAAE2B,QACnBlD,GAAMmD,YAAYF,OAI9B9B,MAlBQ,SAkBFrB,EAAGC,EAAG1E,GACR,IAAMoH,EAAOpH,EAAKqH,YAAcrH,EAAKsH,WAAaX,EAAMC,MAAQD,EAAMQ,KACtExC,GAAMoD,MAAM,IAAI7B,KAAE8B,OAAOtD,EAAGD,IAC5ByB,KAAEqB,OAAO,CAAC7C,EAAGD,GAAI,CACb2C,SACDb,MAAM5B,IAAO6C,UAFhB,kBAEqCxH,EAAKvE,KAF1C,sFAGcuE,EAAKqH,WAAL,UAAqBrH,EAAKqH,WAA1B,WAA2C,iCAHzD,4BAG0ErH,EAAKsH,WAAL,UAAqBtH,EAAKsH,WAA1B,WAA2C,iCAHrH,4FAI8CtH,EAAKmC,QAJnD,6BAI+EnC,EAAKmC,QAJpF,yCAKAnC,EAAKyH,MALL,oEAMWzH,EAAK0H,QANhB,aAMmCO,cAK3C,OAEI,yBAAKhP,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKuG,MAAM,qBACP,2BAAO0I,IAAI,WAAW1I,MAAM,kCAA5B,gBACA,yBAAKA,MAAM,aACP,4BAAQvG,UAAU,gBAAgBmE,SAAU,SAAAsD,GAAK,OAAIoE,EAAQpE,EAAMjB,OAAO/D,QAAQA,MAAOmJ,GACrF,4BAAQsD,UAAQ,GAAhB,kCAEIC,GAASpK,KAAI,SAACgC,GAAD,OACT,4BAAQtE,MAAOsE,EAAKqI,UAAWrI,EAAKqI,gBAOxD,yBAAK7I,MAAM,qBACP,2BAAO0I,IAAI,WAAW1I,MAAM,kCAA5B,gBACA,yBAAKA,MAAM,aACP,4BAAQvG,UAAU,gBAAgBmE,SAAU,SAAAsD,GAAK,OAAIwE,EAAaxE,EAAMjB,OAAO/D,QAAQA,MAAOqJ,GAC1F,4BAAQoD,UAAQ,GAAhB,kCAGY,MAARtD,EAAeuD,GAASE,MAAK,SAACC,GAAD,OAAOA,EAAEF,WAAaxD,KAAM2D,SAASxK,KAAI,SAACgC,GAAD,OAClE,4BAAQtE,MAAOsE,EAAKyI,UAAWzI,EAAKyI,aACnC,QAQ7B,yBAAKxP,UAAU,OAEX,yBAAKA,UAAU,WACX,yBAAKF,GAAG,QAAQ4C,MAAO,CAAEyC,OAAQ,QAASnC,MAAO,c,oqBCtKrE,IAAMyM,GAAiB5O,YAAH,MAad6O,GAAkB7O,YAAH,MAerB,SAAS8O,GAAiBC,GACtB,OACI,kBAACC,GAAA,EAAD,iBACQD,EADR,CAEIE,kBAAgB,gCAChBC,KAAK,KACLrN,MAAO,CAAEkD,gBAAiB,cAAeoK,UAAW,QACpDC,UAAQ,IACR,kBAACJ,GAAA,EAAMK,OAAP,CAAcC,aAAW,GACrB,kBAACN,GAAA,EAAMO,MAAP,CAAatQ,GAAG,iCAAhB,wBAIJ,kBAAC+P,GAAA,EAAMQ,KAAP,KACI,kBAACtO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,wBAGA,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,wBAKJ,kBAACH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,uBAGA,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,uBAGA,kBAACF,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAAhB,0BAMZ,kBAAC0N,GAAA,EAAMS,OAAP,KACI,kBAAC3P,EAAA,EAAD,CAAQuC,QAAS0M,EAAMW,QAAvB,WAmSDC,OAzRf,WAAoB,MAEcvP,oBAAS,GAFvB,mBAETwP,EAFS,KAEAC,EAFA,OAGUzP,oBAAS,GAHnB,mBAGT0P,EAHS,KAGFC,EAHE,OAIY3P,oBAAS,GAJrB,mBAIT4P,EAJS,KAIDC,EAJC,OAKkB7P,oBAAS,GAL3B,mBAKT8P,EALS,KAKEC,EALF,OAMQ/P,mBAAS,CAC7BnB,GAAI,GAAI0C,KAAM,GAAIyO,IAAK,GAAIzC,MAAO,GAAI0C,KAAM,GAAIC,MAAO,KAP3C,mBAMTpK,EANS,KAMHqK,EANG,OAUmBhQ,YAC/BqO,GAAgB,IADZnO,EAVQ,EAURA,KAAMC,EAVE,EAUFA,QAASqD,EAVP,EAUOA,QAVP,EAmBSlD,YAAYgO,IAA9B2B,EAnBS,oBAqBVlO,EAAU,CACZ,CACImO,UAAW,KAAM5N,KAAM,eAAM6N,MAAM,EAEnCC,SAAU,SAACjO,EAAGC,EAAGiO,EAAOH,EAAWI,EAAMC,GACrC,MAAc,QAAVF,EACOjO,EAAID,EAERA,EAAIC,GAEfoO,MAAO,SAAUC,YAAa,SAC9BC,YAAa,CAAE9O,MAAO,OACtBN,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,WAEzE,CACIyO,UAAW,OAAQ5N,KAAM,eAAM6N,MAAM,EAAMlF,OAAQ4F,wBAAcJ,YAAa,SAC9EC,YAAa,CAAE9O,MAAO,QACtBN,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,WAEzE,CACIyO,UAAW,MAAO5N,KAAM,eAAM6N,MAAM,EAAMlF,OAAQ4F,wBAAcJ,YAAa,SAC7EC,YAAa,CAAE9O,MAAO,QACtBN,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,WAEzE,CACIyO,UAAW,QAAS5N,KAAM,2BAAQ6N,MAAM,EAAMlF,OAAQ4F,wBAAcJ,YAAa,SACjFC,YAAa,CAAE9O,MAAO,QACtBN,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,WAEzE,CACIyO,UAAW,OAAQ5N,KAAM,2BAAQ6N,MAAM,EAAMlF,OAAQ6F,wBAAcL,YAAa,SAChFC,YAAa,CAAE9O,MAAO,QACtBN,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,WAEzE,CACIyO,UAAW,QAAS5N,KAAM,eAAM6N,MAAM,EAAMlF,OAAQ4F,wBAAcJ,YAAa,SAC/EC,YAAa,CAAE9O,MAAO,QACtBN,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,YAgB7E,SAASsB,EAASgO,GACdf,EACI,CACItR,GAAwB,OAApBqS,EAAI3L,OAAOhE,KAAgB2P,EAAI3L,OAAO/D,MAAQsE,EAAKjH,GACvD0C,KAA0B,SAApB2P,EAAI3L,OAAOhE,KAAkB2P,EAAI3L,OAAO/D,MAAQsE,EAAKvE,KAC3DyO,IAAyB,QAApBkB,EAAI3L,OAAOhE,KAAiB2P,EAAI3L,OAAO/D,MAAQsE,EAAKkK,IACzDzC,MAA2B,UAApB2D,EAAI3L,OAAOhE,KAAmB2P,EAAI3L,OAAO/D,MAAQsE,EAAKyH,MAC7D0C,KAA0B,SAApBiB,EAAI3L,OAAOhE,KAAkB2P,EAAI3L,OAAO/D,MAAQsE,EAAKmK,KAC3DC,MAA2B,UAApBgB,EAAI3L,OAAOhE,KAAmB2P,EAAI3L,OAAO/D,MAAQsE,EAAKoK,QAIrE7M,QAAQC,IAAI,OAAQwC,EAAM,SAAU8J,GAEpCvM,QAAQC,IAAI,YAAa4N,EAAI3L,OAAO/D,MAAO,QAAS0P,EAAI3L,OAAOhE,MAKnE,OAxBAX,qBAAU,eAwBNN,EAAgB,yBAAKmB,MAAO,CAAEkP,MAAO,WACrC,kBAACjR,EAAA,EAAD,CAAQrB,QAAQ,UAAU8S,UAAQ,GAC9B,kBAACC,GAAA,EAAD,CACIC,GAAG,OACHC,UAAU,OACVxC,KAAK,KACLyC,KAAK,SACLC,cAAY,SANpB,eAgBA,6BACI,kBAAC9C,GAAD,CAAkB+C,KAAM3B,EAAWR,OAAQ,kBAAMS,GAAa,MAC9D,kBAACjP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZ,yCACA,kBAACwQ,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUvS,KAAX,CAAgBwS,QAAM,EAClB1P,QAAS,SAAAb,GACLA,EAAEC,iBACFoO,GAAW,GACXE,GAAS,GACTE,GAAU,GACVlM,MANR,gBAUA,kBAAC+N,GAAA,EAAUvS,KAAX,CAAgBwS,QAAM,EAClB1P,QAAS,SAAAb,GACLA,EAAEC,iBACFoO,GAAW,GACXE,GAAS,GACTE,GAAU,GACVE,GAAa,KANrB,iBAQA,kBAAC2B,GAAA,EAAUvS,KAAX,CAAgBwS,QAAM,EAClB1P,QAAS,SAAAb,GACLA,EAAEC,iBACFoO,GAAW,GACXE,GAAS,GACTE,GAAU,KALlB,mBAYR,kBAAC7O,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKO,MAAO+N,EAAU,GAAK,CAAEzK,QAAS,SAClD,wDACA,yBAAKhG,UAAU,mBAAmB0C,MAAO,CAAEqP,UAAW,YAAaC,SAAU,aAAcnP,WAAY,WACnG,kBAAC,KAAD,CAEIgQ,SAAS,KACTvR,KAAMA,EAAKwR,aACX3P,QAASA,EACT4P,UAAW,CAAEC,SAAU,WACvB5O,WAAY6O,OACZC,cA/FN,CAAC,CACnB5B,UAAW,KACXG,MAAO,UA8FiBpF,OAAQ8G,OACRC,eAAe,UA2C3B,kBAACnR,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKO,MAAOiO,EAAQ,GAAK,CAAE3K,QAAS,SAChD,wDAEA,kBAACqN,GAAA,EAAD,CAAYrT,UAAU,QAClB,kBAACqT,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWE,KAAZ,YAEJ,kBAAC/S,EAAA,EAAD,CAAagC,KAAK,KAAKC,MAAOnB,EAAKwR,aAAa/O,OAAS,EAAGyP,UAAQ,KAIxE,kBAACH,GAAA,EAAD,CAAYrT,UAAU,QAClB,kBAACqT,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWE,KAAZ,sBAEJ,kBAAC/S,EAAA,EAAD,CAAagC,KAAK,OAAO2B,SAAUA,KAIvC,kBAACkP,GAAA,EAAD,CAAYrT,UAAU,QAClB,kBAACqT,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWE,KAAZ,sBAEJ,kBAAC/S,EAAA,EAAD,CAAagC,KAAK,MAAM2B,SAAUA,KAItC,kBAACkP,GAAA,EAAD,CAAYrT,UAAU,QAClB,kBAACqT,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWE,KAAZ,sBAEJ,kBAAC/S,EAAA,EAAD,CAAagC,KAAK,QAAQ2B,SAAUA,KAIxC,kBAACkP,GAAA,EAAD,CAAYrT,UAAU,QAClB,kBAACqT,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWE,KAAZ,kCAEJ,kBAAC/S,EAAA,EAAD,CAAagC,KAAK,OAAO2B,SAAUA,KAIvC,kBAACkP,GAAA,EAAD,CAAYrT,UAAU,QAClB,kBAACqT,GAAA,EAAWC,QAAZ,KACI,kBAACD,GAAA,EAAWE,KAAZ,sBAEJ,kBAAC/S,EAAA,EAAD,CAAagC,KAAK,QAAQ2B,SAAUA,KAIxC,4BAAQjB,QAAS,SAAAb,GACbA,EAAEC,iBACF+O,EAAe,CAEX9O,UAAW,CACPzC,GAAIwB,EAAKwR,aAAa/O,OAAS,EAC/BvB,KAAMuE,EAAKvE,KACXyO,IAAKlK,EAAKkK,IACVzC,MAAOzH,EAAKyH,MACZ0C,KAAMnK,EAAKmK,KACXC,MAAOpK,EAAKoK,WAVxB,sB,SCtNTsC,OA/Ff,WAGI,OACI,kBAAC,IAAD,CAAQC,SAAS,UAMb,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,aACR,kBAAC,GAAD,OAIJ,kBAAC,KAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,YAAYC,UAAWnP,IAEnC,kBAAC,KAAD,CAAOkP,KAAK,eACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,WACR,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,kCACR,kBAAC,EAAD,OAGJ,kBAAC,KAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,UC/DdE,GAAS,IAAIC,IAAa,CAC9BC,IAAK,sCA8BQN,OA3Bf,WACE,OACE,6BAEE,kBAAC,IAAD,CAAgBI,OAAQA,IAEtB,kBAAC,IAAD,CAAeH,SAAUM,UACvB,kBAAC,EAAD,MAMA,6BAIA,kBAACC,GAAD,UC7BUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF3S,SAAS4S,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlK,MAAK,SAAAmK,GACJA,EAAaC,gBAEd3J,OAAM,SAAAzG,GACLL,QAAQK,MAAMA,EAAM2E,c","file":"static/js/main.4ebc4a77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Excel.66c53b49.less\";","module.exports = __webpack_public_path__ + \"static/media/test2.0ff19173.jpg\";","module.exports = __webpack_public_path__ + \"static/media/test1.c501070e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/test3.33112a72.jpg\";","import React from 'react';\r\n\r\n\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\nimport '../App.css';\r\n\r\n\r\n\r\n\r\nfunction TopMenu() {\r\n    return (\r\n\r\n\r\n        <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" sticky=\"top\" >\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Navbar.Brand href=\"/home\">React-Bootstrap</Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/about\">About</Nav.Link>\r\n                    <Nav.Link href=\"/Customer\">顧客管理</Nav.Link>\r\n                    <Nav.Link href=\"/GraphQL\">GraphQL</Nav.Link>\r\n                    <Nav.Link href=\"/UploadForm\">UploadForm</Nav.Link>\r\n                    <Nav.Link href=\"/OsmMap\">OsmMap</Nav.Link>\r\n                    <Nav.Link href=\"/TestAPI\">TestAPI</Nav.Link>\r\n                    <NavDropdown title=\"TestAPI\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"/TestAPI/AgriProductsTransType\">農產品交易行情</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n\r\n                </Nav>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default TopMenu;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n//import Layout from \"../layout/Layout\";\r\n\r\nimport { useQuery, useMutation } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n//import 'antd/dist/antd.css'\r\nimport { Table } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//import useSocket from 'socket.io-client';\r\n\r\n\r\nconst QUERY_CATEGORY = gql`\r\n  query {\r\n    category {\r\n      id\r\n      name\r\n    }\r\n}\r\n`;\r\n\r\nconst CREATE_CATEGORY = gql`\r\n  mutation CreateCategory($name:String!){\r\n   createCategory (input:{name:$name}){\r\n        category{\r\n        id\r\n        name        \r\n        }\r\n    }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nfunction GraphQL() {\r\n    const [count, setCount] = useState(0);\r\n\r\n    //QUERY\r\n    const { data, loading } = useQuery(\r\n        QUERY_CATEGORY, {\r\n        pollInterval: 1000 // refetch the result every 0.5 second\r\n    }\r\n    );\r\n\r\n    //ADD\r\n    let inputName;\r\n    let inputRef = useRef(null);\r\n    const [createCategory] = useMutation(CREATE_CATEGORY);\r\n\r\n    const [createCategory2] = useMutation(CREATE_CATEGORY);\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            defaultSortOrder: 'descend',\r\n            sorter: (a, b) => a.id - b.id,\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            filters: [\r\n                {\r\n                    text: 'Joe',\r\n                    value: 'Joe',\r\n                },\r\n                {\r\n                    text: 'Jim',\r\n                    value: 'Jim',\r\n                },\r\n                {\r\n                    text: 'Submenu',\r\n                    value: 'Submenu',\r\n                    children: [\r\n                        {\r\n                            text: 'Green',\r\n                            value: 'Green',\r\n                        },\r\n                        {\r\n                            text: 'Black',\r\n                            value: 'Black',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            // specify the condition of filtering result\r\n            // here is that finding the name started with `value`\r\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            sortDirections: ['descend'],\r\n        },\r\n\r\n\r\n    ];\r\n\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n\r\n    // useSocket(URL) -> URL：socket server 位址\r\n    //const [socket] = useSocket('<https://open-chat-naostsaecf.now.sh>');\r\n\r\n\r\n    // 相似於 componentDidMount 和 componentDidUpdate:\r\n    useEffect(() => {\r\n        // 使用瀏覽器 API 更新文件標題\r\n        document.title = `You clicked ${count} times`;\r\n        //socket.connect();\r\n    });\r\n\r\n\r\n    // should handle loading status\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <Container >\r\n                <Row />\r\n                <Row>\r\n\r\n                    <Col xs=\"12\" md=\"4\">\r\n                        新增資料\r\n                        <form\r\n                            onSubmit={e => {\r\n                                e.preventDefault();\r\n                                createCategory({\r\n                                    variables: {\r\n                                        name: inputName.value\r\n                                    }\r\n                                });\r\n                                inputName.value = '';\r\n                                // window.location.reload();\r\n                            }}\r\n                            style={{ marginTop: '2em', marginBottom: '2em', whiteSpace: 'nowrap' }}\r\n                        >\r\n                            <label>Category: </label>\r\n                            <input\r\n                                ref={node => {\r\n                                    inputName = node;\r\n                                }}\r\n                                style={{ width: '200px' }}\r\n                            />\r\n\r\n                            <button type=\"submit\" style={{ cursor: 'pointer' }}>Add a Category</button>\r\n                            <br />\r\n                            <label>Category2: </label>\r\n                            <input ref={ref => { inputRef = ref }} style={{ width: '200px' }} />\r\n                            <button onClick={e => {\r\n                                e.preventDefault();\r\n                                createCategory2({\r\n\r\n                                    variables: {\r\n                                        name: inputRef.value,\r\n                                    },\r\n                                });\r\n                                inputRef.value = '';\r\n                            }}> onClick</button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col >\r\n                        <p>You clicked {count} times</p>\r\n\r\n                    </Col>\r\n                    <Col>\r\n                        <button onClick={() => setCount(count + 1)}>\r\n                            Click me</button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {/*      <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.category.map((item) => (\r\n\r\n\r\n                                <tr  >\r\n                                    <td>。</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n\r\n                                </tr>\r\n                            ))\r\n                            }\r\n\r\n\r\n\r\n                        </tbody>\r\n                    </table> */}\r\n\r\n                    <Table columns={columns} dataSource={data.category} onChange={onChange} />\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default GraphQL; //輸出App函式","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nconst GET_POSTS_FOR_AUTHOR = gql`\r\n  query PostsForAuthor {\r\n    posts {\r\n      id\r\n      title\r\n      body\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostList = () => (\r\n    <Query query={GET_POSTS_FOR_AUTHOR}>\r\n        {({ loading, error, data, refetch }) => {\r\n            if (loading) return <p>Loading...</p>;\r\n            if (error) return <p>Error :(</p>;\r\n            const postList = data.posts.map(({ id, title }) => {\r\n                return (\r\n                    <li key={id} className=\"collection-item\">\r\n                        {title}\r\n                    </li>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div>\r\n                    <ul className=\"collection\">{postList}</ul>\r\n                </div>\r\n            );\r\n        }}\r\n    </Query>\r\n\r\n\r\n);\r\nexport default PostList;","import React from 'react';\r\n\r\n\r\nimport { Carousel as CarouselItem } from 'antd';\r\n\r\n\r\n\r\n\r\nfunction Carousel() {\r\n    return (\r\n\r\n\r\n        <CarouselItem autoplay={true} style={{ width: '600px', height: '300px', marginTop: '50px' }}>\r\n            <div stule={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <img\r\n\r\n                    src={require(\"../images/test1.jpg\")}\r\n                    alt=\"First slide\"\r\n                />\r\n            </div>\r\n            <div stule={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <img\r\n\r\n                    src={require(\"../images/test2.jpg\")}\r\n                    alt=\"First slide\"\r\n                />\r\n            </div>\r\n            <div stule={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <img\r\n\r\n                    src={require(\"../images/test3.jpg\")}\r\n                    alt=\"First slide\"\r\n                />\r\n            </div>\r\n            <div stule={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <img\r\n\r\n                    src={require(\"../images/test2.jpg\")}\r\n                    alt=\"First slide\"\r\n                />\r\n            </div>\r\n        </CarouselItem >\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nimport Carousel from './Carousel.js';\r\n\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n\r\n        <Container >\r\n            <Row>\r\n                <Col  >\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col >\r\n                    <Jumbotron style={{ backgroundColor: '#FFFFFF', borderColor: '#555555' }}>\r\n                        <h1>Hello, world!</h1>\r\n                        <p>\r\n                            This is a simple hero unit, a simple jumbotron-style component for calling\r\n                            extra attention to featured content or information.\r\n                        </p>\r\n                        <p>\r\n                            <Button variant=\"primary\" href=\"/about\">Learn more</Button>\r\n                        </p>\r\n                    </Jumbotron>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col >\r\n                    <Carousel />\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n        </Container>\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Jumbotron, Button } from 'react-bootstrap'\r\nimport '../styles/resume.css';\r\n\r\n\r\n\r\nfunction About() {\r\n    return (\r\n        <body style={{  \r\n            padding: '50px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            color: '#707070',\r\n            fontSize: '14px',\r\n            lineHeight: '1.5',\r\n            letterSpacing: '1.5px'}}>\r\n        <div>\r\n            <Jumbotron style={{ backgroundColor: '#FFFFFF', borderColor: '#555555' }}>\r\n                <h1>About!</h1>\r\n                <p>\r\n                    This is a simple hero unit, a simple jumbotron-style component for calling\r\n                    extra attention to featured content or information.\r\n                        </p>\r\n                <p>\r\n                    <Button variant=\"primary\">Learn more</Button>\r\n                </p>\r\n            </Jumbotron>\r\n\r\n\r\n            <div class=\"resume\" >\r\n  <div class=\"left\">\r\n    <img src=\"\" alt=\"\"></img>\r\n    <h1>XU CHEN XUAN</h1>\r\n    <h4>平面設計 • 插畫 • 攝影</h4>\r\n    <hr></hr>\r\n    <p>1997/04/09 • Taiwan</p>\r\n    <div class=\"buttons\">\r\n      <a class=\"btn1 fill\"href=\"https://issuu.com/2sin/docs/yusin_s_portfolio____\"target=\"_blank\" rel=\"noopener noreferrer\">Portfolio</a>\r\n      <a class=\"btn2\"href=\"https://www.behance.net/2sin\"target=\"_blank\" rel=\"noopener noreferrer\">Behance</a>\r\n    </div>\r\n    <div class=\"block\">\r\n      <h4>skills</h4>\r\n      <h2>專業技能</h2>\r\n      <ul class=\"listSkill\">\r\n        <li>\r\n          <div class=\"circle\">\r\n            <div class=\"p90\"></div>\r\n            <div class=\"p180\"></div>\r\n            <div class=\"p270\"></div>\r\n            <div class=\"p360\"></div>\r\n            </div>\r\n          Graphic Design\r\n        </li>\r\n        <li>\r\n          <div class=\"circle\"><div class=\"p90\"></div>\r\n            <div class=\"p180\"></div>\r\n            <div class=\"p270\"></div>\r\n            </div>\r\n          Image Processing\r\n        </li>\r\n        <li>\r\n          <div class=\"circle\"><div class=\"p90\"></div>\r\n            <div class=\"p180\"></div>\r\n            <div class=\"p270\"></div>\r\n            </div>\r\n          Layout Design\r\n        </li>\r\n        <li>\r\n          <div class=\"circle\"><div class=\"p90\"></div>\r\n            <div class=\"p180\"></div>\r\n            </div>\r\n          User Interface\r\n        </li>\r\n        <li>\r\n          <div class=\"circle\"><div class=\"p90\"></div>\r\n            <div class=\"p180\"></div>\r\n            <div class=\"p270\"></div>\r\n            <div class=\"p360\"></div></div>\r\n          llustration\r\n        </li>\r\n        <li>\r\n          <div class=\"circle\"><div class=\"p90\"></div>\r\n            <div class=\"p180\"></div>\r\n            </div>\r\n          Photography\r\n        </li>\r\n        \r\n      </ul>\r\n    </div>\r\n    <div class=\"block\">\r\n      <h4>application software</h4>\r\n      <h2>軟體應用</h2>\r\n      <ul class=\"software\">\r\n        <li>\r\n          Illustrator\r\n         \r\n          <div class=\"bar\">\r\n            <div class=\"value p80\"></div>\r\n          </div>\r\n         \r\n        </li>\r\n        <li>\r\n          Photoshop\r\n          <div class=\"bar\">\r\n            <div class=\"value p80\"></div>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          Indesign\r\n          <div class=\"bar\">\r\n            <div class=\"value p60\"></div>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          Adobe Xd\r\n          <div class=\"bar\">\r\n            <div class=\"value p60\"></div>\r\n          </div>\r\n        </li>\r\n        <li>\r\n          Html / Css\r\n          <div class=\"bar\">\r\n            <div class=\"value p20\"></div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    \r\n  </div>\r\n  <div class=\"right\">\r\n    <div class=\"decoration\"></div>\r\n    <div class=\"block\">\r\n      <h4>experience</h4>\r\n      <h2>經歷</h2>\r\n      <ul class=\"experience\">\r\n        <li class=\"year\">2020\r\n          <ul>\r\n          O O 生態農場 • 行銷設計<br/>\r\n          <span class=\"smalltext\">官網UIUX 發想及設計 / 活動Banner設計 / 商品攝影</span>\r\n            </ul>\r\n        </li>\r\n        <li class=\"year\">2019\r\n          <ul>\r\n            <li>O O 雲端科技 • 設計<br></br><span class=\"smalltext\">UIUX 發想及設計 / 企業形象設計 / 官方網站維護</span></li>\r\n            <li>亞洲大學視覺傳達設計學系畢籌會 • 攝影組 <br></br><span class=\"smalltext\">提報展覽側拍 / 校內展工作人員</span></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"year\">2018\r\n          <ul>\r\n          O O 藝術設計 • 藝術組實習生<br/> <span class=\"smalltext\">活動主視覺設計 / 活動導覽人員 / 粉絲專頁小編</span>\r\n          </ul>\r\n        </li>\r\n        <li class=\"year\">2017\r\n          <ul>\r\n          O O 廣告 • 設計工讀生<br/>\r\n          <span class=\"smalltext\">菜單 / 名片 / DM 設計</span>\r\n          </ul>\r\n        </li>\r\n        <li class=\"year\">2015\r\n          <ul>\r\n            <li>成立個人插畫粉絲專頁<br/><span class=\"smalltext\">粉絲數迄今達 16k</span></li>\r\n            <li>個人插畫展</li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      \r\n    </div>\r\n  <div class=\"block\">\r\n      <h4>competition</h4>\r\n      <h2>比賽 / 參展經歷</h2>\r\n        <ul class=\"competition\">\r\n          <li>2019 亞洲大學紅點校內初審　通過</li>\r\n          <li>2019 高雄放視大賞　入圍</li>\r\n          <li>2019 台北新一代設計展</li>\r\n          <li>2019 亞洲大學創意設計學院聯展</li>\r\n          <li>2018 台灣學生創意設計大賽</li>\r\n        </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n        </body>\r\n\r\n    );\r\n}\r\n\r\nexport default About;\r\n","// excel.js \r\nimport React, { useState } from 'react';\r\nimport { Button, message, Table } from 'antd';\r\n\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport styles from '../styles/Excel.less';\r\n\r\n\r\n//import 'antd/dist/antd.css'\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\n/* \r\nconst columns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.id - b.id,\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        filters: [\r\n            {\r\n                text: 'Joe',\r\n                value: 'Joe',\r\n            },\r\n            {\r\n                text: 'Jim',\r\n                value: 'Jim',\r\n            },\r\n            {\r\n                text: 'Submenu',\r\n                value: 'Submenu',\r\n                children: [\r\n                    {\r\n                        text: 'Green',\r\n                        value: 'Green',\r\n                    },\r\n                    {\r\n                        text: 'Black',\r\n                        value: 'Black',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        // specify the condition of filtering result\r\n        // here is that finding the name started with `value`\r\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortDirections: ['descend'],\r\n    },\r\n\r\n\r\n]; */\r\n\r\nfunction onChange(pagination, filters, sorter, extra) {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n}\r\n\r\n//\r\n\r\nlet data = [];\r\n\r\nfunction UploadForm() {\r\n    const [dataList, setDataList] = useState([]);\r\n    const [header, setHeader] = useState([]);\r\n\r\n    function onImportExcel(file) {\r\n        // 獲取上傳的文件對象 \r\n        const { files } = file.target;\r\n        // 通過FileReader對象讀取文件 \r\n        const fileReader = new FileReader();\r\n        fileReader.onload = event => {\r\n            try {\r\n                const { result } = event.target;\r\n                // 以二進制流方式讀取得到整份excel表格對象 \r\n                const workbook = XLSX.read(result, { type: 'binary' });\r\n                // 存儲獲取到的數據 \r\n                //let data = [];\r\n\r\n                const first_worksheet = workbook.Sheets[workbook.SheetNames[0]];//是工作簿中的工作表的有序列表\r\n                console.log('first_worksheet', first_worksheet)\r\n                const jsonArr = XLSX.utils.sheet_to_json(first_worksheet, { header: 1 });//將工作簿對象轉換為JSON對象數組\r\n                uploadFilesChange(jsonArr, file);\r\n\r\n                // 遍歷每張工作表進行讀取（這裡默認只讀取第一張表）\r\n                for (const sheet in workbook.Sheets) {\r\n                    // esline-disable-next-line \r\n                    if (workbook.Sheets.hasOwnProperty(sheet)) {\r\n                        // 利用sheet_to_json方法將excel轉成json數據 \r\n                        data = data.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\r\n\r\n                        //break; //如果只取第一張表，就取消註釋這行\r\n                    }\r\n                }\r\n                // 最終獲取到並且格式化後的json數據 \r\n                message.success('上傳成功！');\r\n\r\n                console.log(data);\r\n\r\n            } catch (e) {\r\n                // 這裡可以拋出文件類型錯誤不正確的相關提示 \r\n                message.error('文件類型不正確！');\r\n            }\r\n        };\r\n        // 以二進制方式打開文件 \r\n        fileReader.readAsBinaryString(files[0]);\r\n\r\n    }\r\n\r\n    /* \r\n        function onRemove(file) {\r\n            this.setState(state => ({\r\n                data: [],\r\n                fileList: []\r\n            }));\r\n        }\r\n     */\r\n    /*     function onChange(item) {\r\n            console.log('onChange', data)\r\n            this.setState((state, props) => {\r\n                return { item };\r\n            });\r\n        } */\r\n\r\n    function uploadFilesChange(array, file) {\r\n        console.log('uploadFilesChange', array);\r\n        const headerList = array[0];\r\n        console.log('headerList', headerList)\r\n        setHeader(headerList);//頭部數據 [\"姓名\",...]\r\n        const entozh = formatTitleOrFileld('id', 'name');//將表字段數組形式轉化為對象形式,如：{\"姓名\":\"name\",...}\r\n        console.log(header);\r\n        const firstRow = header.map(item => entozh[item]);//可以獲取到行屬性 [\"name\",...]\r\n        const newArray = [...array];\r\n        console.log('newArray', newArray);\r\n        newArray.splice(0, 1);//去除表頭\r\n        console.log('newArray2', newArray);\r\n        const json = newArray.map((item, index) => {\r\n            console.log('item', item)\r\n            const newitem = {};\r\n            item.forEach((im, i) => {\r\n                const newKey = headerList[i] || i;\r\n                newitem[newKey] = im\r\n            })\r\n\r\n\r\n            return newitem;\r\n        });//將存在表頭定義字段的值賦值\r\n        console.log('firstRow', firstRow);\r\n        console.log('json', json);\r\n        setDataList(json);\r\n        const formatData = json.map((item, index) => ({\r\n            name: item[index],\r\n            age: item.age,\r\n            address: item.address,\r\n        }))//篩選出自己需要的屬性\r\n\r\n        console.log('formatData', formatData);\r\n\r\n\r\n\r\n\r\n        return formatData;\r\n    }\r\n    function formatTitleOrFileld(a, b) {\r\n        const entozh = {};\r\n        columns.forEach(item => {\r\n            entozh[item[a]] = item[b]\r\n        })\r\n        return entozh;\r\n\r\n\r\n    }\r\n    const columns = [\r\n        header.map((item, index) => (\r\n            {\r\n\r\n                title: item,\r\n                dataIndex: item,\r\n                defaultSortOrder: 'descend',\r\n                sorter: (a, b) => a[item] - b[item]\r\n\r\n            }\r\n        ))\r\n    ];\r\n\r\n\r\n\r\n    console.log('columns', columns);\r\n\r\n    function ConvertArr(dataList) {\r\n        let obj = {}\r\n        if (dataList.isArray) {\r\n            Object.assign(obj, dataList);\r\n            console.log('obj', obj);\r\n            return obj;\r\n\r\n        };\r\n        console.log('dataList', dataList, 'type', typeof (dataList))\r\n        return dataList;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ marginTop: 100, marginLeft: 50 }}>\r\n            <p className={styles['excelUpload-tip']}>支援.xlsx、.xls 格式的文件</p>\r\n            <Button className={styles['excelUpload-wrap']}>\r\n                <UploadOutlined />\r\n                <input className={styles['excelFile-uploader']} type='file' accept='.xlsx, .xls' onChange={onImportExcel} /* onRemove={this.onRemove} */ />\r\n                <span className={styles['excelUpload-text']}>上傳文件</span>\r\n            </Button>\r\n            <p />\r\n            <p />\r\n\r\n\r\n            {/* \r\n            {header.map((item, index) => (\r\n\r\n                <p>標題{index + 1}: {item}</p>\r\n\r\n\r\n\r\n            ))}\r\n */}\r\n\r\n            <Table columns={columns[0]} dataSource={ConvertArr(dataList)} onChange={onChange} style={{ marginTop: 50 }} />\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\nexport default UploadForm;","import React from 'react';\r\n//import '../styles/style.scss'\r\n\r\n\r\n\r\n\r\nfunction Page404() {\r\n    return (\r\n        <div class=\"container\" style={{ marginTop: '200' }} >\r\n            <div class=\"error404page\">\r\n                <div class=\"newcharacter404\">\r\n                    <div class=\"chair404\"></div>\r\n                    <div class=\"leftshoe404\"></div>\r\n                    <div class=\"rightshoe404\"></div>\r\n                    <div class=\"legs404\"></div>\r\n                    <div class=\"torso404\">\r\n                        <div class=\"body404\"></div>\r\n                        <div class=\"leftarm404\"></div>\r\n                        <div class=\"rightarm404\"></div>\r\n                        <div class=\"head404\">\r\n                            <div class=\"eyes404\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"laptop404\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n// \r\nimport { Table } from 'antd';\r\n\r\n\r\n\r\n\r\n//import useSocket from 'socket.io-client';\r\nconst columns = [\r\n    {\r\n        title: '農產品代碼',\r\n        dataIndex: 'CropCode',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.CropCode - b.CropCode,\r\n    },\r\n    {\r\n        title: '農產品名稱',\r\n        dataIndex: 'CropName',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.CropName.length - b.CropName.length,\r\n    },\r\n    {\r\n        title: '市場名稱',\r\n        dataIndex: 'MarketName',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.MarketName.length - b.MarketName.length,\r\n    },\r\n    {\r\n        title: '交易日期',\r\n        dataIndex: 'TransDate',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.TransDate - b.TransDate,\r\n    },\r\n    {\r\n        title: '市場代號',\r\n        dataIndex: 'MarketCode',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.MarketCode - b.MarketCode,\r\n    },\r\n    {\r\n        title: '上價(元/公斤)',\r\n        dataIndex: 'Upper_Price',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.Upper_Price - b.Upper_Price,\r\n    },\r\n    {\r\n        title: '中價(元/公斤)',\r\n        dataIndex: 'Middle_Price',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.Middle_Price - b.Middle_Price,\r\n    },\r\n    {\r\n        title: '下價(元/公斤)',\r\n        dataIndex: 'Lower_Price',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.Lower_Price - b.Lower_Price,\r\n    },\r\n    {\r\n        title: '平均價(元/公斤)',\r\n        dataIndex: 'Avg_Price',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.Avg_Price - b.Avg_Price,\r\n    },\r\n    {\r\n        title: '交易量(公斤)',\r\n        dataIndex: 'Trans_Quantity',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => a.Trans_Quantity - b.Trans_Quantity,\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n];\r\n\r\n\r\n\r\n\r\n\r\nfunction TestAPI() {\r\n\r\n    const [dataList, setDataList] = useState([]);\r\n    //const [total, setTotal] = useState([]);\r\n    //const [errorMessage, setErrorMessage] = useState([]);\r\n\r\n    // 相似於 componentDidMount 和 componentDidUpdate:\r\n    useEffect(() => {\r\n\r\n        // GET request using fetch with error handling\r\n        fetch('https://agridata.coa.gov.tw/api/v1/AgriProductsTransType')\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response statusText\r\n                    const error = (data && data.message) || response.statusText;\r\n                    return Promise.reject(error);\r\n                }\r\n                const dataArray = data.Data;\r\n                setDataList(dataArray);\r\n\r\n\r\n                //setTotal(data.Data);\r\n                console.log('data', data.Data, 'total', data.total)\r\n\r\n            })\r\n            .catch(error => {\r\n                //setErrorMessage(error.toString);\r\n                console.error('There was an error!', error);\r\n            });\r\n\r\n        // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ overflowX: 'auto', overflowY: 'auto' }}>\r\n            OPENDATA\r\n            <Table columns={columns} dataSource={dataList}\r\n                scroll={{ x: 'calc(700px + 50%)', y: 500 }} />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TestAPI; //輸出App函式","\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport L from 'leaflet';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport cityJson from '../assets/city.json';\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar mymap = null;\r\n\r\nfunction OsmMap() {\r\n\r\n    const [city, setCity] = useState(null);\r\n    const [area, setArea] = useState(null);\r\n    const [data, setData] = useState(null);\r\n\r\n    console.log('city', city);\r\n    console.log('area', area);\r\n\r\n    function onAreaChange(value) {\r\n        removeMarker();\r\n        setArea(value);\r\n        updateMarker(value);\r\n    };\r\n\r\n    //重製地圖\r\n    function removeMarker() {\r\n        osm.removeMapMarker();\r\n    };\r\n\r\n    //更新地圖\r\n    function updateMarker(area) {\r\n        const pharmacies = data.filter((pharmacy) => {\r\n            if (!area) {\r\n                return pharmacy.properties.county === city;\r\n            }\r\n            return pharmacy.properties.town === area;\r\n        });\r\n        pharmacies.forEach((pharmacy) => {\r\n            const { properties, geometry } = pharmacy;\r\n            osm.addMapMarker(\r\n                geometry.coordinates[0],\r\n                geometry.coordinates[1],\r\n                properties,\r\n            );\r\n        });\r\n        penTo(pharmacies[0]);\r\n\r\n\r\n    };\r\n    function penTo(pharmacy) {\r\n\r\n        osm.penTo(pharmacy.geometry.coordinates[0], pharmacy.geometry.coordinates[1], pharmacy.properties);\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('mymap', mymap); // should output the object that represents instance of Leaflet\r\n        if (mymap !== undefined && mymap !== null) {\r\n            mymap.remove(); // should remove the map from UI and clean the inner children of DOM element\r\n            console.log(mymap); // nothing should actually happen to the value of mymap\r\n        }\r\n        mymap = L.map(\"mapid\").setView([25.03418, 121.564517], 17);\r\n\r\n        const OSMUrl = \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\";\r\n\r\n        L.tileLayer(OSMUrl, {\r\n            attribution: '<a target=\"_blank\" href=\"https://www.openstreetmap.org/\">© OpenStreetMap 貢獻者</a>',\r\n            maxZoom: 18,\r\n        }).addTo(mymap);\r\n\r\n        //取得口罩相關資訊\r\n        axios('https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json')\r\n            .then(res => {\r\n                console.log('口罩', res.data.features)\r\n                setData(res.data.features);\r\n                //updateMarker();\r\n            }).catch(error => {\r\n\r\n                console.error('There was an error!', error);\r\n            });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    const icons = {\r\n        green: new L.Icon({\r\n            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [1, -34],\r\n            shadowSize: [41, 41],\r\n        }),\r\n        grey: new L.Icon({\r\n            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-grey.png',\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [1, -34],\r\n            shadowSize: [41, 41],\r\n\r\n        }),\r\n    };\r\n\r\n    const osm = {\r\n        addMapMarker(x, y, item) {\r\n            const icon = item.mask_adult || item.mask_child ? icons.green : icons.grey;\r\n            L.marker([y, x], {\r\n                icon,\r\n            }).addTo(mymap).bindPopup(`<strong>${item.name}</strong> <br>\r\n      口罩剩餘：<strong>成人 - ${item.mask_adult ? `${item.mask_adult} 個` : '未取得資料'}/ 兒童 - ${item.mask_child ? `${item.mask_child} 個` : '未取得資料'}</strong><br>\r\n      地址: <a href=\"https://www.google.com.tw/maps/place/${item.address}\" target=\"_blank\">${item.address}</a><br>\r\n      電話: ${item.phone}<br>\r\n      <small>最後更新時間: ${item.updated}</small>`);\r\n        },\r\n        removeMapMarker() {\r\n            mymap.eachLayer((layer) => {\r\n                if (layer instanceof L.Marker) {\r\n                    mymap.removeLayer(layer);\r\n                }\r\n            });\r\n        },\r\n        penTo(x, y, item) {\r\n            const icon = item.mask_adult || item.mask_child ? icons.green : icons.grey;\r\n            mymap.panTo(new L.LatLng(y, x));\r\n            L.marker([y, x], {\r\n                icon,\r\n            }).addTo(mymap).bindPopup(`<strong>${item.name}</strong> <br>\r\n      口罩剩餘：<strong>成人 - ${item.mask_adult ? `${item.mask_adult} 個` : '未取得資料'}/ 兒童 - ${item.mask_child ? `${item.mask_child} 個` : '未取得資料'}</strong><br>\r\n      地址: <a href=\"https://www.google.com.tw/maps/place/${item.address}\" target=\"_blank\">${item.address}</a><br>\r\n      電話: ${item.phone}<br>\r\n      <small>最後更新時間: ${item.updated}</small>`).openPopup();\r\n        },\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div class=\"form-group d-flex\">\r\n                        <label for=\"cityJson\" class=\"mr-2 col-form-label text-right\">縣市</label>\r\n                        <div class=\"flex-fill\">\r\n                            <select className=\"custom-select\" onChange={event => setCity(event.target.value)} value={city}>\r\n                                <option selected>請選擇縣市</option>\r\n                                {\r\n                                    cityJson.map((item) => (\r\n                                        <option value={item.CityName}>{item.CityName}</option>\r\n                                    ))\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group d-flex\">\r\n                        <label for=\"cityJson\" class=\"mr-2 col-form-label text-right\">地區</label>\r\n                        <div class=\"flex-fill\">\r\n                            <select className=\"custom-select\" onChange={event => onAreaChange(event.target.value)} value={area}>\r\n                                <option selected>請選擇地區</option>\r\n                                {\r\n\r\n                                    city != null ? cityJson.find((c) => c.CityName === city).AreaList.map((item) => (\r\n                                        <option value={item.AreaName}>{item.AreaName}</option>\r\n                                    )) : ''\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-12 \">\r\n                    <div id=\"mapid\" style={{ height: \"300px\", width: \"auto\" }} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default OsmMap; //輸出App函式","import React, { useState, useEffect } from 'react';\r\n//import Layout from \"../layout/Layout\";\r\n\r\nimport { useQuery, useMutation } from 'react-apollo';\r\nimport { gql } from 'apollo-boost';\r\n\r\n//import Container from 'react-bootstrap/Container'\r\n//import Row from 'react-bootstrap/Row'\r\n//import Col from 'react-bootstrap/Col'\r\nimport { InputGroup, Container, Row, Col, FormControl, ListGroup, Spinner, Button, Modal } from 'react-bootstrap'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\n\r\n\r\nconst QUERY_CUSTOMER = gql`\r\n  query {\r\n    customerList{\r\n     id\r\n     name\r\n     tel\r\n     phone\r\n     date\r\n     other\r\n   }\r\n}\r\n`;\r\n\r\nconst CREATE_CUSTOMER = gql`\r\n  mutation CreateCustomer($id:ID!,$name:String!,$tel:String!,$phone:String!,$date:Date!,$other:String!){\r\n   createCustomer (id:$id,name:$name,tel:$tel,phone:$phone,date:$date,other:$other){\r\n        customer{\r\n        id\r\n        name      \r\n        tel\r\n        phone\r\n        date\r\n        other  \r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nfunction MydModalWithGrid(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            size=\"lg\"\r\n            style={{ backgroundColor: 'transparent', maxHeight: \"100%\" }}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Using Grid in Modal\r\n          </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body >\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={12} md={8}>\r\n                            .col-xs-12 .col-md-8\r\n              </Col>\r\n                        <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n              </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n              </Col>\r\n                        <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n              </Col>\r\n                        <Col xs={6} md={4}>\r\n                            .col-xs-6 .col-md-4\r\n              </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Customer() {\r\n    //const [count, setCount] = useState(0);\r\n    const [isQuery, setIsQuery] = useState(false);\r\n    const [isAdd, setIsAdd] = useState(false);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [item, setItem] = useState({\r\n        id: '', name: \"\", tel: \"\", phone: \"\", date: \"\", other: \"\"\r\n    })\r\n    //QUERY\r\n    const { data, loading, refetch } = useQuery(\r\n        QUERY_CUSTOMER, {\r\n        //pollInterval: 1000 // refetch the result every 0.5 second\r\n    }\r\n    );\r\n\r\n    //ADD\r\n    //let inputName;\r\n    //let inputRef = useRef(null);\r\n    const [createcustomer] = useMutation(CREATE_CUSTOMER);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"id\", text: \"編號\", sort: true,\r\n            // Perform a reverse sorting here\r\n            sortFunc: (a, b, order, dataField, rowA, rowB) => {\r\n                if (order === 'asc') {\r\n                    return b - a;\r\n                }\r\n                return a - b; // desc\r\n            },\r\n            align: 'center', headerAlign: \"center\",\r\n            headerStyle: { width: '5em' },\r\n            style: { wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }\r\n        },\r\n        {\r\n            dataField: \"name\", text: \"姓名\", sort: true, filter: textFilter(), headerAlign: \"center\",\r\n            headerStyle: { width: '10em' },\r\n            style: { wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }\r\n        },\r\n        {\r\n            dataField: \"tel\", text: \"電話\", sort: true, filter: textFilter(), headerAlign: \"center\",\r\n            headerStyle: { width: '10em' },\r\n            style: { wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }\r\n        },\r\n        {\r\n            dataField: \"phone\", text: \"手機號碼\", sort: true, filter: textFilter(), headerAlign: \"center\",\r\n            headerStyle: { width: '10em' },\r\n            style: { wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }\r\n        },\r\n        {\r\n            dataField: \"date\", text: \"加入日期\", sort: true, filter: dateFilter(), headerAlign: \"center\",\r\n            headerStyle: { width: '18em' },\r\n            style: { wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }\r\n        },\r\n        {\r\n            dataField: \"other\", text: \"備註\", sort: true, filter: textFilter(), headerAlign: \"center\",\r\n            headerStyle: { width: '20em' },\r\n            style: { wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }\r\n        },\r\n\r\n    ]\r\n    const defaultSorted = [{\r\n        dataField: 'id',\r\n        order: 'descx'\r\n    }];\r\n\r\n\r\n    // 相似於 componentDidMount 和 componentDidUpdate:\r\n    useEffect(() => {\r\n\r\n\r\n    });\r\n\r\n    function onChange(evt) {\r\n        setItem(\r\n            {\r\n                id: evt.target.name === \"id\" ? evt.target.value : item.id,\r\n                name: evt.target.name === \"name\" ? evt.target.value : item.name,\r\n                tel: evt.target.name === \"tel\" ? evt.target.value : item.tel,\r\n                phone: evt.target.name === \"phone\" ? evt.target.value : item.phone,\r\n                date: evt.target.name === \"date\" ? evt.target.value : item.date,\r\n                other: evt.target.name === \"other\" ? evt.target.value : item.other,\r\n\r\n            }\r\n        );\r\n        console.log(\"item\", item, 'isEdit', isEdit);\r\n\r\n        console.log(\"new value\", evt.target.value, \"event\", evt.target.name);\r\n\r\n    }\r\n\r\n    // should handle loading status\r\n    if (loading) return <div style={{ align: \"center\" }}>\r\n        <Button variant=\"primary\" disabled>\r\n            <Spinner\r\n                as=\"span\"\r\n                animation=\"grow\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n\r\n            />\r\n        Loading...\r\n    </Button>\r\n    </div>;\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)} />\r\n            <Container >\r\n                <Row >\r\n                    <Col xs=\"12\" md=\"2\" >\r\n                        <h2>ListGroup</h2>\r\n                        <ListGroup>\r\n                            <ListGroup.Item action\r\n                                onClick={e => {\r\n                                    e.preventDefault();\r\n                                    setIsQuery(true);\r\n                                    setIsAdd(false);\r\n                                    setIsEdit(false);\r\n                                    refetch();\r\n\r\n                                }}\r\n                            >檢視</ListGroup.Item>\r\n                            <ListGroup.Item action\r\n                                onClick={e => {\r\n                                    e.preventDefault();\r\n                                    setIsQuery(false);\r\n                                    setIsAdd(true);\r\n                                    setIsEdit(false);\r\n                                    setModalShow(true);\r\n                                }}> 新增</ListGroup.Item>\r\n                            <ListGroup.Item action\r\n                                onClick={e => {\r\n                                    e.preventDefault();\r\n                                    setIsQuery(false);\r\n                                    setIsAdd(false);\r\n                                    setIsEdit(true);\r\n\r\n                                }}> 修改</ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n\r\n                    <Col xs=\"12\" md=\"10\" style={isQuery ? {} : { display: 'none' }}>\r\n                        <h2>顧客清單</h2>\r\n                        <div className=\"table-responsive\" style={{ wordBreak: \"break-all\", wordWrap: \"break-word\", whiteSpace: \"normal\" }}>\r\n                            <BootstrapTable\r\n\r\n                                keyField=\"id\"\r\n                                data={data.customerList}\r\n                                columns={columns}\r\n                                bodyStyle={{ overflow: 'overlay' }}\r\n                                pagination={paginationFactory()}\r\n                                defaultSorted={defaultSorted}\r\n                                filter={filterFactory()}\r\n                                filterPosition=\"top\"\r\n\r\n                            //cellEdit={cellEditFactory({ mode: 'click', blurToSave: true })}\r\n                            >\r\n\r\n                            </BootstrapTable>\r\n                        </div>\r\n\r\n\r\n                        {/*    <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>編號</th>\r\n                                    <th>姓名</th>\r\n                                    <th>住家電話</th>\r\n                                    <th>手機號碼</th>\r\n                                    <th>加入日期</th>\r\n                                    <th>其他</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {data.customerList.map((item) => (\r\n\r\n\r\n                                    <tr  >\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.tel}</td>\r\n                                        <td>{item.phone}</td>\r\n                                        <td>{item.date}</td>\r\n                                        <td>{item.other}</td>\r\n\r\n                                    </tr>\r\n                                ))\r\n                                }\r\n\r\n\r\n                            </tbody>\r\n                        </table> */}\r\n\r\n\r\n                    </Col>\r\n\r\n                    <Col xs=\"12\" md=\"10\" style={isAdd ? {} : { display: 'none' }} >\r\n                        <h2>新增資料</h2>\r\n\r\n                        <InputGroup className=\"mb-3\" >\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>id</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"id\" value={data.customerList.length + 1} readOnly />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className=\"mb-3\" >\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>姓名</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"name\" onChange={onChange} />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text >電話</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"tel\" onChange={onChange} />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text >手機</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"phone\" onChange={onChange} />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text >加入日期</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"date\" onChange={onChange} />\r\n\r\n                        </InputGroup>\r\n\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text >備註</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"other\" onChange={onChange} />\r\n\r\n                        </InputGroup>\r\n\r\n                        <button onClick={e => {\r\n                            e.preventDefault();\r\n                            createcustomer({\r\n\r\n                                variables: {\r\n                                    id: data.customerList.length + 1,\r\n                                    name: item.name,\r\n                                    tel: item.tel,\r\n                                    phone: item.phone,\r\n                                    date: item.date,\r\n                                    other: item.other,\r\n                                },\r\n                            });\r\n                            // inputRef.value = '';\r\n                        }}> 送出</button>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Customer; //輸出App函式","import React from 'react';\r\n\r\n\r\nimport GraphQL from './page/GraphQL.js';\r\nimport PostList from './page/PostList';\r\nimport Home from './page/Home.js';\r\nimport About from './page/About.js';\r\nimport UploadForm from './page/UploadForm.js';\r\nimport Page404 from './page/Page404';\r\nimport TestAPI from './page/TestAPI'\r\nimport Carousel from './page/Carousel';\r\nimport OsmMap from './page/OsmMap';\r\nimport Customer from './page/Customer';\r\n\r\n\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n/* function Home() {\r\n    return <h2>Home</h2>;\r\n} */\r\n/* \r\nfunction About() {\r\n    return <h2>Users123</h2>;\r\n}\r\n \r\nfunction Users() {\r\n    return <h2>Users123</h2>;\r\n}\r\n*/\r\nfunction App() {\r\n    //let match = useRouteMatch();\r\n\r\n    return (\r\n        <Router basename=\"/react\">\r\n\r\n\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n            <Switch>\r\n                <Route path=\"/about\" >\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"/Customer\">\r\n                    <Customer />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"/GraphQL\" >\r\n                    <GraphQL />\r\n                </Route>\r\n                <Route path=\"/PostList\" component={PostList}>\r\n                </Route>\r\n                <Route path=\"/UploadForm\">\r\n                    <UploadForm />\r\n                </Route>\r\n                <Route path=\"/Page404\">\r\n                    <Page404 />\r\n                </Route>\r\n                <Route path=\"/OsmMap\">\r\n                    <OsmMap />\r\n                </Route>\r\n                <Route path=\"/Page404\">\r\n                    <Page404 />\r\n                </Route>\r\n                <Route path=\"/Carousel\">\r\n                    <Carousel />\r\n                </Route>\r\n                <Route path=\"/TestAPI\">\r\n                    <TestAPI />\r\n                </Route>\r\n                <Route path=\"/TestAPI/AgriProductsTransType\">\r\n                    <TestAPI />\r\n                </Route>\r\n\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </Router>\r\n    );\r\n}\r\n\r\n/* function TestAPIs() {\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <div>\r\n            {/* \r\n            <h2>TestAPIs</h2>\r\n\r\n            <ul>\r\n                <li>\r\n                    <Link to={`${match.url}/AgriProductsTransType`}>AgriProductsTransType</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${match.url}/AgriProductsTransType`}>AgriProductsTransType</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${match.url}/props-v-state`}>\r\n                        Props v. State\r\n            </Link>\r\n                </li>\r\n            </ul>\r\n\r\n           The Topics page has its own <Switch> with more routes\r\n            that build on the /topics URL path. You can think of the\r\n            2nd <Route> here as an \"index\" page for all topics, or\r\n            the page that is shown when no topic is selected \r\n            <Switch>\r\n                <Route path={`${match.path}/AgriProductsTransType`}>\r\n                    <TestAPI />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n} */\r\n/* \r\nfunction Topic() {\r\n    let { topicId } = useParams();\r\n    return <h3>Requested topic ID: {topicId}</h3>;\r\n} */\r\n\r\nexport default App;\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport TopMenu from './layout/TopMenu.js';\r\nimport RouterSetting from './RouterSetting.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://192.168.0.18:8000/graphql/', // your GraphQL Server \r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n\r\n      <ApolloProvider client={client}>\r\n\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <TopMenu />\r\n\r\n\r\n\r\n\r\n\r\n          <br />\r\n\r\n\r\n\r\n          <RouterSetting />\r\n\r\n\r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}